<script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>

<script>
  window.better_carts = {
    {% if customer %}
      id: "{{ customer.id }}",
      email: "{{ customer.email }}"
    {% endif %},
    shop: "{{ shop.id }}"
  };
</script>

<script
  src="{{ 'better-carts.js' | asset_url }}"
  type="module"
  defer>
</script>

<style>
  @import url('https://fonts.googleapis.com/css2?family=Oxygen:wght@400;700 &display=swap');

  .smart-cart {
    position: fixed;
    bottom: {{ block.settings.margin-bottom }}px;
    right: {{ block.settings.margin-right }}px;
    display: flex;
    align-items: end;
    gap: 10px;
    font-family: 'Oxygen', sans-serif;
    z-index: 1000; 
  }

  .smart-cart__container {
    border-radius: 20px;
    min-width: 350px;
    opacity: 0;
    max-height: 0;
    overflow: hidden;
    -webkit-transition: all 0.5s ease-in-out;
    transition: all 0.5s ease-in-out;
    scale: 0.5;
    transform: translate(100%, 100%);
    background-color: var(--primary-color);
    color: #fff;
  }

  .is-open {
    opacity: 1;
    max-height: fit-content;
    scale: 1;
    transform: translate(0, 0);
  }

  .smart-cart__header {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 10px;
  }

  .smart-cart__settings {
    width: 20px;
    height: 20px;
    background: transparent;
    border: none;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 0;
  }

  .smart-cart__color-list {
    display: none;
    justify-content: center;
    flex-wrap: wrap;
    list-style: none;
    margin: 0;
    padding: 0;
    position: absolute;
    top: 7%;
    left: 5%;
    background: #eceff1;
    border-radius: 5px;
    box-shadow: 0 0 6px rgba(0, 0, 0, 0.16), 0 6px 12px rgba(0, 0, 0, 0.32);
    z-index: 1000;
    width: 125px;
  }

  .smart-cart__color-list--is-active {
    display: flex;
  }

  .smart-cart__color-item {
    display: block;
    width: 18px;
    height: 18px;
    border-radius: 50%;
    margin: 5px;
    float: left;
    cursor: pointer;
  }

  .smart-cart__title {
    margin: 0;
    font-weight: 400;
    font-size: 20px;
    flex-grow: 1;
    text-align: center;
    color: #fff;
  }

  .smart-cart__body {
    display: flex;
    flex-direction: column;
    gap: 20px;
    border-radius: 20px;
    height: 400px;
    background-color: #fff;
    color: var(--primary-color);
    padding: 5%;
    overflow: scroll;
  }

  .smart-cart__subtitle {
    margin: 0;
    font-weight: 400;
    font-size: 16px;
    color: #000;
  }

  .smart-cart__button-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 10px 0;
  }

  .smart-cart__button {
    border: 1px solid var(--primary-color);
    padding: 2%;
    border-radius: 10px;
    text-transform: uppercase;
    text-decoration: none;
    font-size: 14px;
    text-align: center;
    cursor: pointer;
    width: 45%;
    transition: all 0.5s ease-in-out;
  }

  .smart-cart__button:hover {
    scale: 1.15
  }

  .smart-cart__checkout {
    width: 100%;
    background-color: var(--primary-color);
    color: #fff;
    padding: 4%;
  }

  .smart-cart__checkout:hover {
    scale: 1.05;
  }

  .smart-cart__signup {
    background-color: var(--primary-color);
    color: #fff;
  }

  .smart-cart__signin {
    background-color: #fff;
    color: #000;
  }

  .smart-cart__total-wrapper {
    display: flex;
    justify-content: space-between;
    width: 100%;
    padding: 3% 5%;
  }

  .smart-cart__tab {
    display: flex;
    flex-direction: column;
    width: 100%;
    border: 2px solid rgba(120, 120, 120, 0.2);
    background-color: #fff;
    border-radius: 10px;
  }

  .smart-cart__collapsible-btn {
    padding: 5%;
    border-radius: 10px;
    background-color: #fff;
    border: none;
    outline: none;
    font-family: 'Oxygen', sans-serif;
    font-size: 16px;
    font-weight: 700;
    text-align: left;
    cursor: pointer;
  }

  .smart-cart__collapsible-btn:before {
    content: '';
    float: left;
    display: block;
    height: 100%;
    width: 10%;
    margin-right: 10px;
    background-image: url('{{ "small-cart.svg" | asset_url }}');
    background-repeat: no-repeat;
    background-size: 75%;
    transform: rotate(-15deg);
    scale: 1.3;
  }

  .smart-cart__collapsible-btn:after {
    content: '';
    float: right;
    display: block;
    height: 100%;
    width: 7%;
    background-image: url('{{ "arrow.svg" | asset_url }}');
    background-repeat: no-repeat;
    background-size: 100%;
    rotate: 90deg;
    transition: all 0.5s ease-in-out;
  }

  .smart-cart__collapsible-btn--is-active:after {
    rotate: -90deg;
  }

  .smart-cart__collapsible-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.5s ease-in-out;
  }

  .smart-cart__collapsible-text {
    padding: 5%;
    color: #000;
    margin: 0;
    max-width: 300px;
  }

  .smart-cart__line-items {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }

  .smart-cart__line-item {
    display: flex;
    gap: 10px;
  }

  .smart-cart__image {
    width: 80px;
    height: 100px;
    object-fit: cover;
  }

  .smart-cart__line-item-info {
    display: flex;
    flex-direction: column;
  }

  .smart-cart__line-item-info-wrapper {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    width: 100%;
  }

  .smart-cart__line-item-title {
    font-weight: 700;
    font-size: 16px;
    margin: 0;
    color: rgba(0, 0, 0, 0.8);
  }

  .smart-cart__price,
  .smart-cart__variant,
  .smart-cart__reservation-timer {
    font-size: 12px;
  }

  .smart-cart__price,
  .smart-cart__remove {
    color: rgb(120, 120, 120)
  }

  .smart-cart__variant {
    color: rgb(120, 120, 120);
  }

  .smart-cart__quantity-container {
    display: flex;
    border: 1px solid rgba(120, 120, 120, 0.2);
    width: max-content;
  }

  .smart-cart__quantity-minus,
  .smart-cart__quantity-plus {
    border: none;
    outline: none;
    background-color: #fff;
    color: #000;
    font-size: 16px;
    cursor: pointer;
  }

  .smart-cart__quantity {
    border: none;
    outline: none;
    background-color: #fff;
    color: #000;
    font-size: 16px;
    width: 30px;
    text-align: center;
    width: 20px;
  }

  /* Chrome, Safari, Edge, Opera */
  .smart-cart__quantity::-webkit-outer-spin-button,
  .smart-cart__quantity::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  /* Firefox */
  .smart-cart__quantity[type=number] {
    -moz-appearance: textfield;
  }

  .smart-cart__remove {
    align-self: end;
    background-color: transparent;
    border: none;
    text-decoration: underline;
    cursor: pointer;
  }

  .smart-cart__footer {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 5px;
  }

  .smart-cart__opener {
    position: relative;
    width: 70px;
    height: 70px;
    border-radius: 50%;
    background-color: #fff;
    border: none;
    outline: none;
    cursor: pointer;
    background-image: url('{{ "open-cart.svg" | asset_url }}');
    background-repeat: no-repeat;
    background-position-x: center;
    background-position-y: center;
    background-size: 75%;
    background-color: var(--primary-color);
    rotate: -15deg;
    transition: all 0.5s ease-in-out;
  }

  .smart-cart__opener:hover {
    scale: 1.1;
  }

  .is-active {
    background-image: url('{{ "close-cart.svg" | asset_url }}');
    rotate: 360deg;
    background-position: center;
    background-color: var(--primary-color);
    background-size: 50%;
  }

  .smart-cart__icon-badge {
    display: none;
    background-color: red;
    border-radius: 50%;
    color: #fff;
    position: absolute;
    top: 0;
    right: 0;
    rotate: 15deg;
    padding: 0%;
    width: 25px;
    height: 25px;
    font-size: 16px;
    text-align: center;
    justify-content: center;
    align-items: center;
  }

  .has-updates {
    display: flex;
  }

  @media (max-width: 768px) {
    .smart-cart {
      flex-direction: column;
    }
  }
</style>

{% if block.settings.only-cart == false or block.settings.only-cart == true and template.name == 'cart' %}
<smart-cart class="smart-cart"></smart-cart>
{% endif %}

<script>
  class SmartCart extends HTMLElement {
    constructor() {
      super();

      this.colors = [
        {
          name: 'black',
          hex: '#000000'
        },
        {
          name: 'red',
          hex: '#F44336'
        },
        {
          name: 'pink',
          hex: '#E91E63'
        },
        {
          name: 'purple',
          hex: '#9C27B0'
        }, {
          name: 'deep-purple',
          hex: '#673AB7'
        }, {
          name: 'indigo',
          hex: '#3F51B5'
        }, {
          name: 'blue',
          hex: '#2196F3'
        }, {
          name: 'light-blue',
          hex: '#03A9F4'
        }, {
          name: 'cyan',
          hex: '#00BCD4'
        }, {
          name: 'teal',
          hex: '#009688'
        }, {
          name: 'green',
          hex: '#4CAF50'
        }, {
          name: 'light-green',
          hex: '#8BC34A'
        }, {
          name: 'orange',
          hex: '#FF9800'
        }, {
          name: 'deep-orange',
          hex: '#FF5722'
        }, {
          name: 'brown',
          hex: '#795548'
        }, {
          name: 'grey',
          hex: '#9E9E9E'
        }, {
          name: 'blue-grey',
          hex: '#607D8B'
        }
      ]

      // this.APP_URL = 'https://better-carts-app-jif2w.ondigitalocean.app';
      // this.APP_URL_DEV = 'https://smart-carts.dev-test.pro';

      this.APP_URL = 'https://andrii.ngrok.app';

      this.init();
    }

    async init() {
      if (!localStorage.getItem('smart-cart__primary-color')) {
        localStorage.setItem('smart-cart__primary-color', this.colors[0].hex);
      }

      document.documentElement.style.setProperty('--primary-color', localStorage.getItem('smart-cart__primary-color'));

      this.container = this.initContainer();
      const header = this.initHeader(this.colors);

      if (window.better_carts.id) {
        const cart_id = document.cookie
          .split('; ')
          .find((row) => row.startsWith('cart='))
          ?.split('=')[1];
        const cartData = await fetch(`${this.APP_URL}/storefront/cart/get?cart_id=${cart_id}&shop=${window.better_carts.shop}`);

        if (!cartData.ok) {
          
        }

        const [cart] = await cartData.json();

        this.container.append(header, this.createCartScreen(cart), this.initFooter(cart));

        setInterval(() => {
          this.updateData();
        }, 10000);
      } else {
        this.container.append(header, this.createLoginScreen(), this.initFooter());
      }
      const opener = this.initOpener();

      this.append(this.container, opener);
    }

    initContainer() {
      const container = document.createElement('div');
      container.classList.add('smart-cart__container');

      return container;
    }

    initHeader(colors) {
      const header = document.createElement('div');
      header.classList.add('smart-cart__header');

      const settings = document.createElement('button');
      settings.classList.add('smart-cart__settings');
      settings.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20"><g fill="white"><circle cx="10" cy="15" r="2"/><circle cx="10" cy="10" r="2"/><circle cx="10" cy="5" r="2"/></g></svg>'
      settings.addEventListener('click', () => {
        const colorList = header.querySelector('.smart-cart__color-list');
        colorList.classList.toggle('smart-cart__color-list--is-active');
      });

      const colorList = document.createElement('ul');
      colorList.classList.add('smart-cart__color-list');

      colors.forEach(color => {
        const colorItem = document.createElement('li');
        colorItem.classList.add('smart-cart__color-item');
        colorItem.style.border = `5px solid ${
          color.hex
        }`;
        colorItem.style.backgroundColor = color.hex;
        colorItem.addEventListener('click', () => {
          localStorage.setItem('smart-cart__primary-color', color.hex);
          document.documentElement.style.setProperty('--primary-color', color.hex);
        });

        colorList.append(colorItem);
      });


      const title = document.createElement('h2');
      title.classList.add('smart-cart__title');
      title.textContent = 'Your Cart';

      header.append(settings, colorList, title);

      return header;
    }

    initFooter(cart = null) {
      const footer = document.createElement('div');
      footer.classList.add('smart-cart__footer');

      if (better_carts.id) {
        const totalWrapper = document.createElement('div');
        totalWrapper.classList.add('smart-cart__total-wrapper');

        const total = document.createElement('span');
        total.classList.add('smart-cart__total');
        total.textContent = 'Total: ';

        const amount = document.createElement('span');
        amount.classList.add('smart-cart__amount');
        amount.textContent = `${
          this.formatter(cart.total, '{{ shop.currency }}')
        }`;

        totalWrapper.append(total, amount);

        footer.append(totalWrapper);
      } else {
        footer.textContent = ' ';
      }

      return footer;
    }

    createLineItem(item) {
      const lineItem = document.createElement('div');
      lineItem.classList.add('smart-cart__line-item');

      if (item.image_link) {
        const image = document.createElement('img');
        image.classList.add('smart-cart__image');
        image.src = item.image_link;

        lineItem.append(image);
      } else {
        const image = document.createElement('div');
        image.classList.add('smart-cart__image');
        image.innerHTML = '{{ 'product-1' | placeholder_svg_tag }}';

        lineItem.append(image);
      }

      const line_item_info = document.createElement('div');
      line_item_info.classList.add('smart-cart__line-item-info');

      const title = document.createElement('h3');
      title.classList.add('smart-cart__line-item-title');
      title.textContent = item.title || 'Default title';

      const price = document.createElement('span');
      price.classList.add('smart-cart__price');
      price.textContent = this.formatter(item.price, '{{ shop.currency }}') || this.formatter('0.00', '{{ shop.currency }}');

      const variant = document.createElement('span');
      variant.classList.add('smart-cart__variant');
      variant.textContent = item.variant_title || 'Default variant';

      const reservation_timer = this.initializeTimer(item);

      line_item_info.append(title, price, variant, reservation_timer);

      const quantity_container = document.createElement('div');
      quantity_container.classList.add('smart-cart__quantity-container');

      const quantity_minus = document.createElement('button');
      quantity_minus.classList.add('smart-cart__quantity-minus');
      quantity_minus.textContent = '-';

      quantity_minus.addEventListener('click', () => {
        const quantity = quantity_container.querySelector('.smart-cart__quantity');
        if (quantity.value > 1) {
          quantity.value--;

          const updatedItems = {
            updates: {
              [item.variant_id]: quantity.value
            }
          };
  
          fetch(window.Shopify.routes.root + 'cart/update.js', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(updatedItems)
          });
        }
      });

      const quantity = document.createElement('input');
      quantity.classList.add('smart-cart__quantity');
      quantity.type = 'number';
      quantity.name = item.variant_id;
      quantity.value = Number(item.qty);

      const quantity_plus = document.createElement('button');
      quantity_plus.classList.add('smart-cart__quantity-plus');
      quantity_plus.textContent = '+';
      quantity_plus.addEventListener('click', () => {
        const quantity = quantity_container.querySelector('.smart-cart__quantity');
        quantity.value++;

        const updatedItems = {
          updates: {
            [item.variant_id]: quantity.value
          }
        };

        fetch(window.Shopify.routes.root + 'cart/update.js', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(updatedItems)
        });
      });

      quantity_container.append(quantity_minus, quantity, quantity_plus);

      const line_item_info_wrapper = document.createElement('div');
      line_item_info_wrapper.classList.add('smart-cart__line-item-info-wrapper');
      line_item_info_wrapper.append(line_item_info, quantity_container);

      const remove = document.createElement('button');
      remove.classList.add('smart-cart__remove');
      remove.textContent = 'Remove';
      remove.addEventListener('click', () => {
        const updatedItems = {
          'id': item.variant_id,
          'quantity': 0
        };

        fetch(window.Shopify.routes.root + 'cart/change.js', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(updatedItems)
        });

        lineItem.remove();
      });

      lineItem.append(line_item_info_wrapper, remove);

      return lineItem;
    }

    initializeTimer(cartItemData) {
      const timerContainer = document.createElement('span');
      timerContainer.classList.add('smart-cart__reservation-timer');

      if (cartItemData.status) {
        if (cartItemData.status === 'unreserved') {
          timerContainer.textContent = 'Not reserved';
          timerContainer.style.color = 'grey';
        } else if (cartItemData.status === 'expired') {
          timerContainer.textContent = 'Reserve time expired!';
          timerContainer.style.color = 'red';
        } else {
          const endDate = new Date(cartItemData.expire_at);

          let _second = 1000;
          let _minute = _second * 60;
          let _hour = _minute * 60;
          let _day = _hour * 24;
          let timer;

          function showRemaining(endDate) {
            let now = new Date();
            let distance = endDate - now;

            if (distance < 0) {
              clearInterval(timer);
              timerContainer.textContent = 'Reserve time expired!';
              timerContainer.style.color = 'red';

              return;
            }

            let days = Math.floor(distance / _day);
            let hours = Math.floor((distance % _day) / _hour);
            let minutes = Math.floor((distance % _hour) / _minute);
            let seconds = Math.floor((distance % _minute) / _second);

            if (days || hours >= 2) {
              timerContainer.style.color = 'green';
            } else if (hours < 2) {
              timerContainer.style.color = 'orange';
            }

            const addLeadingZero = (value, isLast = false) => {
              if (value === 0) return '';
              
              return (value > 9 ? value : '0' + value) + (isLast ? '' : ':');
            } 
            
            timerContainer.textContent = `Reserve time: ${addLeadingZero(days) + addLeadingZero(hours) + addLeadingZero(minutes) + addLeadingZero(seconds, true)}`;
          }

          timer = setInterval(() => showRemaining(endDate), 1000);
        }
      }

      return timerContainer;
    }

    createLoginScreen() {
      const body = document.createElement('div');
      body.classList.add('smart-cart__body');

      const subtitle = document.createElement('h3');
      subtitle.classList.add('smart-cart__subtitle');
      subtitle.textContent = 'Login or create an account to view your cart';

      const buttonContainer = document.createElement('div');
      buttonContainer.classList.add('smart-cart__button-container');

      const signup = document.createElement('a');
      signup.classList.add('smart-cart__button');
      signup.classList.add('smart-cart__signup');
      signup.textContent = 'Sign up';
      signup.href = '/account/register';

      const signin = document.createElement('a');
      signin.classList.add('smart-cart__button');
      signin.classList.add('smart-cart__signin');
      signin.textContent = 'Sign in';
      signin.href = '/account/login';

      buttonContainer.append(signup, signin);

      const tab = document.createElement('div');
      tab.classList.add('smart-cart__tab');

      const collapsibleBtn = document.createElement('button');
      collapsibleBtn.classList.add('smart-cart__collapsible-btn');
      collapsibleBtn.textContent = 'What is this?';

      const collapsibleContent = document.createElement('div');
      collapsibleContent.classList.add('smart-cart__collapsible-content');

      const collapsibleText = document.createElement('p');
      collapsibleText.classList.add('smart-cart__collapsible-text');
      collapsibleText.innerHTML = '<span>Enhance your shopping journey with us by logging in! Enjoy these personalized perks when you log into your account:<br><br><b>&bull; Order Tracking:</b> Keep tabs on your orders with a simple click - from processing to delivery! <br><b>&bull; Faster Checkout:</b> Say goodbye to repetitive information entry. Save your details once and breeze through checkouts on future purchases. <br><b>&bull; Reserved Shopping Cart:</b> Enjoy the luxury of time! All items added to your cart are reserved for a limited period, giving you the freedom to shop at your own pace, without the fear of losing the item. <br><b>&bull; Shop From Social Media:</b> We value your engagement! When you comment on our social media posts, we can conveniently add requested items to your shopping cart.<br><br>Experience a smoother, more interactive shopping experience by logging in today!</span>';

      collapsibleContent.append(collapsibleText);

      collapsibleBtn.addEventListener('click', () => {
        collapsibleBtn.classList.toggle('smart-cart__collapsible-btn--is-active');
        if (collapsibleContent.style.maxHeight) {
          collapsibleContent.style.maxHeight = null;
        } else {
          collapsibleContent.style.maxHeight = collapsibleContent.scrollHeight + 'px';
        }
      });

      tab.append(collapsibleBtn, collapsibleContent);

      body.append(subtitle, buttonContainer, tab);

      return body;
    }

    createCartScreen(cart) {
      const body = document.createElement('div');
      body.classList.add('smart-cart__body');

      const cartform = document.createElement('form');
      cartform.action = '/cart';
      cartform.method = 'POST';
      cartform.id='cartform';

      const checkout = document.createElement('button');
      checkout.classList.add('smart-cart__checkout', 'smart-cart__button');
      checkout.type = 'submit';
      checkout.id = 'checkoutform';
      checkout.name = 'checkout';
      checkout.textContent = 'Checkout now';

      cartform.append(checkout);
      body.append(cartform);

      const lineItems = document.createElement('div');
      lineItems.classList.add('smart-cart__line-items');

      cart.items.forEach(item => {
        const lineItem = this.createLineItem(item);
        lineItems.append(lineItem);
      });

      body.append(lineItems);

      return body;
    }

    initOpener() {
      const button = document.createElement('button');
      button.classList.add('smart-cart__opener');

      const iconBadge = this.initIconBadge();
      button.append(iconBadge);

      button.addEventListener('click', () => {
        this.querySelector('.smart-cart__container').classList.toggle('is-open');
        button.classList.toggle('is-active');

        const iconBadge = button.querySelector('.smart-cart__icon-badge');

        if (iconBadge.classList.contains('has-updates')) {
          iconBadge.classList.remove('has-updates');
          iconBadge.textContent = '';
        }
      });

      return button;
    }

    async updateData(updates = 0) {
      if (window.better_carts.id) {
        const cart_id = document.cookie
          .split('; ')
          .find((row) => row.startsWith('cart='))
          ?.split('=')[1];
        const cartData = await fetch(`${this.APP_URL}/storefront/cart/get?cart_id=${cart_id}&shop=${window.better_carts.shop}`);

        if (!cartData.ok) {
          
        }

        const [cart] = await cartData.json();

        const totalCartQuantity = cart.items.reduce((acc, item) => {
          return acc + Number(item.qty);
        }, 0);

        const lineItems = this.querySelectorAll('.smart-cart__line-item');
        const lineItemsQuantity = Array.from(lineItems).reduce((acc, item) => {
          const quantity = item.querySelector('.smart-cart__quantity').value;
          return acc + Number(quantity);
        }, 0);

        if (totalCartQuantity !== lineItemsQuantity) {
          const cartScreen = this.querySelector('.smart-cart__body');
          const newCartScreen = this.createCartScreen(cart);
          cartScreen.replaceWith(newCartScreen);

          const cartButton = this.querySelector('.smart-cart__opener');
          const iconBadge = cartButton.querySelector('.smart-cart__icon-badge');

          if (updates && !cartButton.classList.contains('is-active')) {
            iconBadge.classList.add('has-updates');
            iconBadge.textContent = updates;
          } else {
            iconBadge.classList.remove('has-updates');
            iconBadge.textContent = '';
          }
        }
      }
    }

    formatter(price, currency) {
      const formatter = new Intl.NumberFormat(undefined, {
        style: 'currency',
        currency: currency || 'USD',
      });

      return formatter.format(Number(price));
    }

    initIconBadge() {
      const iconBadge = document.createElement('div');
      iconBadge.classList.add('smart-cart__icon-badge');

      return iconBadge;
    }
  }

  window.customElements.define('smart-cart', SmartCart);
</script>

{% schema %}
  {
    "name": "Smart Carts",
    "target": "body",
    "settings": [
      {
        "type": "checkbox",
        "id": "only-cart",
        "label": "Show Smart Cart on cart page only",
        "default": false
      },
      {
        "type": "range",
        "id": "margin-bottom",
        "label": "Margin bottom",
        "default": 10,
        "min": 0,
        "max": 100,
        "step": 1,
        "unit": "px"
      },
      {
        "type": "range",
        "id": "margin-right",
        "label": "Margin right",
        "default": 10,
        "min": 0,
        "max": 100,
        "step": 1,
        "unit": "px"
      }
    ]
  }
{% endschema %}